{"version":3,"sources":["scripts/main.js"],"names":["ListURL","DetailsURL","list","document","createElement","body","append","ul","querySelector","getPhones","fetch","then","response","ok","Error","status","url","headers","get","json","data","getPhonesDetails","catch","error","setTimeout","li","textContent","datafromServer","forEach","phone","phoneId","id","renderList","name"],"mappings":";AAAA,aAGA,IAAMA,EAAU,wEAEVC,EAAa,oEAEbC,EAAOC,SAASC,cAAc,MAEpCD,SAASE,KAAKC,OAAOJ,GAErB,IAAMK,EAAKJ,SAASK,cAAc,MAElC,SAASC,IACPC,MAAMV,GACHW,KAAK,SAAAC,GACA,IAACA,EAASC,GACN,MAAA,IAAIC,MAASF,GAAAA,OAAAA,EAASG,OAAYH,OAAAA,OAAAA,EAASI,IAAjD,kBAGE,IAACJ,EAASK,QAAQC,IAAI,gBAClB,MAAA,IAAIJ,MAAM,kCAGXF,OAAAA,EAASO,SAEjBR,KAAK,SAAAS,GACJC,EAAiBD,KAElBE,MAAM,SAAAC,GACLC,WAAW,WACHC,IAAAA,EAAKtB,SAASC,cAAc,MAElCqB,EAAGC,YAAcH,EAEjBhB,EAAGD,OAAOmB,IACT,OAIT,SAASJ,EAAiBM,GACxBA,EAAeC,QAAQ,SAAAC,GACfC,IAAAA,EAAUD,EAAME,GAEtBrB,MAAST,GAAAA,OAAAA,GAAa6B,OAAAA,EAAtB,UACGnB,KAAK,SAAAC,GACA,IAACA,EAASC,GACN,MAAA,IAAIC,MAAgCgB,0BAAAA,OAAAA,IAGrClB,OAAAA,EAASO,SAEjBR,KAAK,SAAAS,IAWCY,SAAWZ,GACZK,IAAAA,EAAKtB,SAASC,cAAc,MAElCqB,EAAGC,YAAcN,EAAKa,KAEtB1B,EAAGD,OAAOmB,GAfRO,CAAWZ,KAEZE,MAAM,SAAAC,GACCE,IAAAA,EAAKtB,SAASC,cAAc,MAElCqB,EAAGC,YAAcH,EAEjBhB,EAAGD,OAAOmB,OAalBhB","file":"main.3a84fc97.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\n// eslint-disable-next-line\nconst ListURL = 'https://mate-academy.github.io/phone-catalogue-static/api/phones.json';\n// eslint-disable-next-line\nconst DetailsURL = 'https://mate-academy.github.io/phone-catalogue-static/api/phones/';\n\nconst list = document.createElement('ul');\n\ndocument.body.append(list);\n\nconst ul = document.querySelector('ul');\n\nfunction getPhones() {\n  fetch(ListURL)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(`${response.status} - ${response.url} is not exist`);\n      }\n\n      if (!response.headers.get('content-type')) {\n        throw new Error('Content tipe is note supported');\n      }\n\n      return response.json();\n    })\n    .then(data => {\n      getPhonesDetails(data);\n    })\n    .catch(error => {\n      setTimeout(() => {\n        const li = document.createElement('li');\n\n        li.textContent = error;\n\n        ul.append(li);\n      }, 5000);\n    });\n};\n\nfunction getPhonesDetails(datafromServer) {\n  datafromServer.forEach(phone => {\n    const phoneId = phone.id;\n\n    fetch(`${DetailsURL}${phoneId}.json`)\n      .then(response => {\n        if (!response.ok) {\n          throw new Error(`Cannot find phone with ${phoneId}`);\n        }\n\n        return response.json();\n      })\n      .then(data => {\n        renderList(data);\n      })\n      .catch(error => {\n        const li = document.createElement('li');\n\n        li.textContent = error;\n\n        ul.append(li);\n      });\n\n    function renderList(data) {\n      const li = document.createElement('li');\n\n      li.textContent = data.name;\n\n      ul.append(li);\n    }\n  });\n}\n\ngetPhones();\n"]}